<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zye1996.github.io</id>
    <title>Magnetic Field</title>
    <updated>2021-04-21T20:22:02.081Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zye1996.github.io"/>
    <link rel="self" href="https://zye1996.github.io/atom.xml"/>
    <subtitle>γνῶθι σεαυτόν ｜ 认识你自己</subtitle>
    <logo>https://zye1996.github.io/images/avatar.png</logo>
    <icon>https://zye1996.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Magnetic Field</rights>
    <entry>
        <title type="html"><![CDATA[目标识别论文-Generalized Focal Loss]]></title>
        <id>https://zye1996.github.io/post/mu-biao-shi-bie-lun-wen-generalized-focal-loss/</id>
        <link href="https://zye1996.github.io/post/mu-biao-shi-bie-lun-wen-generalized-focal-loss/">
        </link>
        <updated>2021-04-18T16:25:35.000Z</updated>
        <content type="html"><![CDATA[<h2 id="导言">导言</h2>
<p>Generalized Focal Loss (GFL) 是一种通过<strong>调整框本身和框质量（好坏）估计的表示，来提高模型学习效果</strong>的技术。最近这个方法也推出了v2的版本，这种思路总体上会比较轻量，不会给模型本身带来很多的overhead，非常不错。</p>
<h2 id="motivation">Motivation</h2>
<p>GFL要解决的问题主要有两个：</p>
<ul>
<li><strong>分类分支和框质量分支在训练时不一致，在测试时却需要共同决定框表示</strong>。对于先前的很多anchor-free检测器来说，除了对特征图中每个像素对应的检测框回归外，还需要用一个额外分支回归框的质量（centerness或者gIOU），最后使用NMS参考这个质量值去掉那些不好的检测框（偏离中心的框）。这个分支在训练时是单独训练的，如下图FOS的模型结构中最右侧的center-ness分支，在预测时却是和分类分支得到的信度相乘得到最终预测框的信度。<br>
<img src="https://zye1996.github.io/post-images/1619031795741.png" alt="" loading="lazy"></li>
<li><strong>传统的框表示太过于strict，可能对于模棱两可的边界不够友好</strong>。先前的方法都对像素点到边界的距离回归，这些距离都是hard-coded的，不存在随机性；从概率的角度说就是这些回归对象满足狄拉克分布（只在hard-coded的完全正确值上有概率）。</li>
</ul>
<h2 id="解决方法">解决方法</h2>
<figure data-type="image" tabindex="1"><img src="https://zye1996.github.io/post-images/1619033322838.png" alt="" loading="lazy"></figure>
<h3 id="解决问题1">解决问题1:</h3>
<p>为了让分类分支和框质量分支在训练测试时一致，所以文章就想办法整合他们一起训练。具体的方法是在搭label的时候使用框质量作为正确类别one-hot encoding上的值。此时这个值位0～1之间的浮点数，如此一来传统的focal loss也不能使用了，于是改为这个叫Quality Focal Loss的这个损失函数：<br>
<img src="https://zye1996.github.io/post-images/1619032831668.png" alt="" loading="lazy"><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> 为框质量的目标值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>为正确类别的框质量预测值。</p>
<h3 id="解决问题2">解决问题2:</h3>
<p>既然框的表示使用狄拉克分布太strict，于是作者就尝试用一个general的分布来对框表示建模，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">P(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，每个距离值y都有一定的概率取到，最后像素到框四个边的距离由这个分布的积分得出。具体的，对像素到每一边的距离，最后预测的是一个n维向量（四个边就是4n维），每一个维度都代表预测值取得可行域中某一个值的概率。因为是概率分布，每个n维向量的值加和都要等于1（用softmax处理即可）。同时加入了一个新的loss函数来对学习分布进行监督，称作Ditribution Focal Loss:<br>
<img src="https://zye1996.github.io/post-images/1619033700466.png" alt="" loading="lazy"><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>为目标值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">y_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为最靠近<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>的两个边界，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">S_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>这两个值所表示的概率。总的来说这个loss的目的是提高取得目标值的概率。</p>
<h3 id="以上两个方法的通解">以上两个方法的通解</h3>
<p>以上两个问题的解决方法可以写为通用的形式，也就是GFL：<br>
<img src="https://zye1996.github.io/post-images/1619034869894.png" alt="" loading="lazy"></p>
<h2 id="v2版本改进">V2版本改进</h2>
<p>实验证明学习到的框的边界分布和框的质量有很大的关系，如果一个框的边界越明确，那么对应的分布肯定很集中，这样的检测框的质量也会高一些。作者在v2版本中尝试使用框的边界分布取指导框质量的回归。<br>
<img src="https://zye1996.github.io/post-images/1619034356277.png" alt="" loading="lazy"><br>
具体的做法就是在得到框的概率分布后，取得每个分布的topk概率值，一般地，topk数值的和越大，那么这个分布就越集中，所对应的预测框就越明确。最后通过一堆全连接层提取特征以后得到一个由框边界分布而来的分数，将这个分数乘到分类分数上去得到最后的信度。</p>
<p>以上的改进被证明对最后的预测结果比较明显的提升：<br>
<img src="https://zye1996.github.io/post-images/1619034929494.png" alt="" loading="lazy"></p>
<h2 id="引用">引用</h2>
<p>GFL version 1: <a href="https://arxiv.org/pdf/2006.04388.pdf">paper</a><br>
GFL version 2: <a href="https://arxiv.org/pdf/2011.12885.pdf">paper</a><br>
GFL code: <a href="https://github.com/implus/GFocalV2">codebase</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[多模态3D目标识别论文-imVoteNet]]></title>
        <id>https://zye1996.github.io/post/duo-mo-tai-3d-mu-biao-shi-bie-imvotenet/</id>
        <link href="https://zye1996.github.io/post/duo-mo-tai-3d-mu-biao-shi-bie-imvotenet/">
        </link>
        <updated>2021-01-14T18:18:17.000Z</updated>
        <content type="html"><![CDATA[<h2 id="导言">导言</h2>
<p>多模态3D目标识别任务常常要融合Image相片信息和Lidar点云数据，以此来为单纯依赖点云的方法添加相片中的材质纹理和颜色特征。imVoteNet是今年CVPR2020上发布的论文，主要思想在于<span style="color:red">使用成熟的2D目标检测器辅助3D检测器propose检测框</span>，以此来缩小3D检测器的搜索范围。</p>
<p>我觉得可以借鉴的点有：</p>
<ul>
<li><strong>网络结构</strong>：采用了独立的2D检测器生成2D预测结果，预测结果通过某种方式反馈到3D点云中去，总体上看起来是late fusion的模式。<span style="color:red">可以使用任何2D检测器和类似VoteNet的点云3D目标检测模型，甚至可以使用在体素方法上（在相机视角上压缩）</span>。</li>
<li><strong>训练方式</strong>:  使用了Multi-tower training来调节不同来源的特征的收敛速度。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><img src="https://zye1996.github.io/post-images/1611465210781.png" alt="Late Fusion" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><em>Late Fusion</em></td>
</tr>
</tbody>
</table>
<h2 id="主要方法">主要方法</h2>
<h3 id="2d特征提取">2D特征提取</h3>
<p>2D特征提取主要依赖于一个训练完成的检测器，大概流程如下：</p>
<ol>
<li>2D检测器检测图片， 输出目标框和目标类别。</li>
<li>将3D目标检测器输出的seed point，也就是下采样得到的可能存在目标的点投影回图片中。</li>
<li>如果投影回图片中的点恰好落在2D目标框内，则对该点对应的像素提取三种特征：
<ul>
<li>geometry特征：通过该像素相对2D目标框中心的位移（2D Hough Vote），估计出的伪<span style="color:red">3D Hough Vote</span>。</li>
<li>semantic特征：可以是对应2D目标框抽取出的特征向量，也可以直接是分类结果的one-hot向量。</li>
<li>texture特征：可以是投影像素领域上的RGB值，也可以是单像素的RGB值。</li>
</ul>
</li>
</ol>
<p>semantic和texture特征都比较容易理解，提取geometry特征的示意图如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center"><img src="https://zye1996.github.io/post-images/1611545951945.png" alt="geometry特征" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><em>geometry特征</em></td>
</tr>
</tbody>
</table>
<p><span style="color:red">Geometry特征即为由向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>p</mi><mi>c</mi></mrow><mo>⃗</mo></mover><mo>=</mo><mo>(</mo><mi mathvariant="normal">△</mi><mi>u</mi><mo separator="true">,</mo><mi mathvariant="normal">△</mi><mi>v</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\vec{pc}=(\triangle{u}, \triangle{v})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9084399999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mord mathdefault">c</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">△</span><span class="mord"><span class="mord mathdefault">u</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span><span class="mclose">)</span></span></span></span>估计出的3D向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>P</mi><msup><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{PC^{&#x27;}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.76698em;"><span style="top:-2.789em;margin-right:0.05em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.33598em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></span>（理想情况下我们希望估计出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>P</mi><mi>C</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{PC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>，但是倘若物体距离镜头很远的话，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">C^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>在z轴上的差距可以忽略不计）。同时为了一定程度上弥补这种估计带来的不准确性，geometry还包括了向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>O</mi><mi>C</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{OC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的方向。因此对于点P<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>1</mn></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">(x_1, y_1, z_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>我们有geometry特征：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mfrac><mrow><mi mathvariant="normal">△</mi><mi>u</mi></mrow><mi>f</mi></mfrac><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">△</mi><mi>v</mi></mrow><mi>f</mi></mfrac><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><mfrac><mover accent="true"><mrow><mi>O</mi><msup><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup></mrow><mo>⃗</mo></mover><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mrow><mi>O</mi><msup><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup></mrow><mo>⃗</mo></mover><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>)</mo></mrow><annotation encoding="application/x-tex">(\frac{\triangle{u}}{f}z_{1}, \frac{\triangle{v}}{f}z_{1}, \frac{\vec{OC^{&#x27;}}}{||\vec{OC^{&#x27;}}||})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9169599999999996em;vertical-align:-1.1899799999999998em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">△</span><span class="mord"><span class="mord mathdefault">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">△</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.72698em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.0499799999999997em;"></span><span class="mord"><span class="mord">∣</span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.76698em;"><span style="top:-2.789em;margin-right:0.05em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.33598em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span></span></span><span style="top:-3.2799799999999997em;"><span class="pstrut" style="height:3.0499799999999997em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7269799999999997em;"><span class="pstrut" style="height:3.0499799999999997em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.76698em;"><span style="top:-2.789em;margin-right:0.05em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.33598em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1899799999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="multi-tower-training">Multi-tower training</h3>
<table>
<thead>
<tr>
<th style="text-align:center"><img src="https://zye1996.github.io/post-images/1611547715896.png" alt="Multi-tower Head" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><em>Multi-tower Head</em></td>
</tr>
</tbody>
</table>
<p>为了解决不同来源的feature在问题优化中步调不一致的问题，文章采用了multi-tower的方法对模型进行训练。也就是<span style="color:red">同时使用2D特征、3D特征以及2D和3D特征联结</span>分别训练一个VoteNet检测头（先vote，再propose）。<br>
这样一来训练的loss就为三个检测头的loss的加权平均，文章也试验了不同的权重组合，最终得出2D：3D：（2D+3D）=0.3:0.3:0.4时效果最好。<br>
虽然在训练时使用三个独立检测头，<span style="color:red">但实际模型推理仅仅使用（2D+3D）这一个检测头来预测结果。</span></p>
<h2 id="建议阅读">建议阅读</h2>
<p>现在源码已经放出，可以试着阅读：<br>
<a href="https://github.com/facebookresearch/imvotenet">imvotenet源码</a><br>
同时，mmdetection3D框架上有老哥放出了不带Multi-tower的pull request：<br>
<a href="https://github.com/THU17cyz/mmdetection3d/tree/imvotenet">mmdetection3d的imvotenet pull request</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[3D目标识别论文-3DSSD]]></title>
        <id>https://zye1996.github.io/post/3d-mu-biao-shi-bie-lun-wen-3dssd/</id>
        <link href="https://zye1996.github.io/post/3d-mu-biao-shi-bie-lun-wen-3dssd/">
        </link>
        <updated>2021-01-09T01:15:30.000Z</updated>
        <content type="html"><![CDATA[<h2 id="导言">导言</h2>
<p>最近在学习一些基于激光雷达数据的3D目标识别算法，于是就写一些学习笔记希望能帮助到同样有兴趣的各位。</p>
<p>3DSSD是发布在2020 CVPR上的作品，采用了基于<font color=red><strong>点云</strong></font>的预测方法，使用原始点云数据进行特征提取并做proposal。对于类似的方法，模型的结构往往借鉴PointNet++的框架：点云数据-&gt;骨干网络特征提取-&gt;上采样插值-&gt;检测头输出预测。3DSSD为了取消费时的上采样插值部分，提出了新的<font color=red><strong>F-FPS和Fusion Sampling</strong></font>作为补偿。</p>
<p>在PointNet++的特征提取模块中，数据经历了三个步骤：</p>
<ul>
<li>点采样 （Point Sampling）
<ul>
<li>因为点云数据过多，需要使用 Furthest Point Samping （FPS）对所有点进行下采样</li>
</ul>
</li>
<li>分组 （Point Grouping）
<ul>
<li>将采样过后得到的点作为中心点，以这些点为中心，将采样前所有特征点使用KNN或者Ball Query的方法分配到各个中心点所处的空间内</li>
</ul>
</li>
<li>特征聚合 （Feature Aggregation）
<ul>
<li>将每一个空间点内的特征点的特征以一定方式聚合到中心点上，这样中心点就包含了组内所有点的特征。</li>
</ul>
</li>
</ul>
<h2 id="主要改进">主要改进</h2>
<h3 id="f-fps-采样方法">F-FPS 采样方法</h3>
<p>在骨干网络提取特征时，随着网络加深需要使用FPS方法下采样坐标点，常规的做法是根据点的空间坐标来下采样（distance-FPS），<font color=blue>即假设采样空间坐标差异大的点有助于保留整体点云的信息</font>，本论文中提出了feature-FPS的方法，使用每一层获得的点的特征来下采样，<font color=red>即假设保留特征差异大的点有助于体现整体点云信息。</font></p>
<table>
<thead>
<tr>
<th style="text-align:center"><img src="https://zye1996.github.io/post-images/1610595422669.png" alt="骨干网络示意图" width="500" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><em>骨干网络示意图</em></td>
</tr>
</tbody>
</table>
<p>实验证明feature-FPS有助于保留前景点，提高采样的recall（即能采样到更多在目标内的点）。但是仅使用feature-FPS会造成很多点被认作false positve而导致objectness分类准确率降低（我的理解是会造成样本数量不平衡），因此文章又提出了Fusion Sampling的策略，即每次采样时用feature-FPS采样一定数量的点，另外的点用distance-FPS采样。</p>
<p>需要注意的是，在连续两个采用 Fusion Sampling 策略的特征提取模块堆叠时，第二个feature-FPS只会从之前feature-FPS获得的点中采样，对distance-FPS也是如此（如上图）。</p>
<h3 id="anchor-free-检测头">Anchor-free 检测头</h3>
<p>网络为了更加轻量化，使用了anchor-free的预测生成策略，对于每一个seed点（voting之后的特征和坐标），直接对其回归一个表征预测框的向量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><msub><mi>d</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>z</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>h</mi></msub><mo separator="true">,</mo><mi>a</mi><mi>n</mi><msub><mi>g</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><mi>a</mi><mi>n</mi><msub><mi>g</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">(d_x, d_y, d_z, d_l, d_w, d_h, ang_{cls}, ang_{res})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，包含了该点对真实目标框中心的位移，长宽高的偏移，角度的bin类别和相对该bin的位移（角度被分为12个bin，每个bin为30度）。<br>
除此之外当然还会对目标的类别进行预测，区别是在生成类别真实值的标签时，我们不仅会对点所属的类进行监督（即在一个one-hot类别向量上哪一个维度非零），<font color=red>还会对点靠近中心的程度进行监督</font>，即在点所属的类别的维度上用以下结果代替1：</p>
<table>
<thead>
<tr>
<th style="text-align:center"><img src="https://zye1996.github.io/post-images/1610598130493.png" alt="centerness" width="250" loading="lazy"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><em>centerness标签计算</em></td>
</tr>
</tbody>
</table>
<p>在计算loss时，我们使用huber loss（smoothL1）计算各个偏移量的loss；paper中写到对点的类别使用了cross entropy，在实现中其实是一个binary cross entropy:</p>
<pre><code>cls_loss = tf.nn.sigmoid_cross_entropy_with_logits(labels=gt_cls, logits=pred_cls)
</code></pre>
<h2 id="代码实现">代码实现</h2>
<p>官方代码使用tensorflow实现，应该是参考了PointNet++的实现：<a href="https://github.com/Jia-Research-Lab/3DSSD">官方TF1实现</a><br>
还有一个用pytorch的复现，<font color=red>小心使用，很多问题，我在自己fork的repo修复了一部分，目前还没完成</font>：<a href="https://github.com/qiqihaer/3DSSD-pytorch">pytorch复现</a><br>
mmdetection3d有一个成功的复现：<a href="https://github.com/open-mmlab/mmdetection3d">mmdetection3d框架</a></p>
<h2 id="建议阅读">建议阅读</h2>
<p>对于骨干网络的其他部分，尤其是对vote机制，可以参照VoteNet的实现，几乎一样。</p>
]]></content>
    </entry>
</feed>